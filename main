# Part A
import cv2 # open computer vision trains computers to see and understand digital images
import numpy as np # import data in computer vision
from picamera import PiCamera # connect to the camera
from picamera.array import PiRGBArray # make camera find the color range

import RPi.GPIO as GPIO # GPIO is the set of pins that connects the circuits and power in pc
from time import sleep

GPIO.setwarnings(False) # prevent GPIO send warnings

# Wiring pins for left wheel
# ServoPin: Control the movement of all manner of project components with your Raspberry Pi and a motor controller attached to its GPIO pins
# PWM - Pulse Width Modulated: control motors including servo motors used in robots and automation, lights and other electronic devices.
# p = IO.PWM(output channel , frequency of PWM signal)

input1 = 14
input2 = 4
en = 25 # grounding
servoPin = 17 

# Wiring pins for right wheel
input3 = 17
input4 = 5
en2 = 26
servoPin2 = 18

GPIO.setmode(GPIO.BCM) # GPIO pins that directly connectd to the system on a chip of raspberry pi

GPIO.setup(servoPin, GPIO.OUT)
pwm = GPIO.PWM(servoPin, 100) # frequency of PWM signal is 100

GPIO.setmode(GPIO.BCM)

# Left wheel setup
GPIO.setup(input1, GPIO.OUT) # showing an output
GPIO.setup(input2, GPIO.OUT)

GPIO.setup(en, GPIO.OUT)
GPIO.output(input1, GPIO.LOW) # moving in slow mode
GPIO.output(input2, GPIO.LOW)
p = GPIO.PWM(en, 1000)

# Right wheel setup
GPIO.setup(input3, GPIO.OUT)
GPIO.setup(input4, GPIO.OUT)

GPIO.setup(en2, GPIO.OUT)
GPIO.output(input3, GPIO.LOW)
GPIO.output(input4, GPIO.LOW)
p2 = GPIO.PWM(en2, 1000)

# Set the inital speed for wheel
# P.S. the value affects the initial speed of the wheel
p.start(99) # left wheel initial speed
p2.start(99) # right wheel initial speed

print("Welcome to Eraser Bot 3000")
print('''Instructions Menu
        r-run s-stop
        f-forward b-backward
        l-low m-medium h-high
        e-exist
      ''')
print("\n")

# Start!!
# HIGH & LOW - FOWARD
# LOW & HIGH - BACKWARD

# Left wheel moves forward
GPIO.output(input1, GPIO.HIGH)
GPIO.output(input2, GPIO.LOW)
print("Attention: Left wheel starts to move forward now!")

# Right wheel moves forward
GPIO.output(input3, GPIO.HIGH)
GPIO.output(input4, GPIO.LOW)
print("Attention: Right wheel starts to move forward now!")

# Pi Camera Setup
# -------------------------------------------------
# Make a camera object
camera = PiCamera()

# Set Camera resolution & frame rate
camera.resolution = (640, 480)
camera.framerate = 120 #120 fps, the framerate can affect the speed of capturing pictures/colors, sensitive to color changes

# Set up the size of picture capture
rawCapture = PiRGBArray(camera, size=(640,480))
pixels = 640 * 480

# Set up the color range
color_lower = np.array([0, 42, 0])
color_upper = np.array([179, 255, 255])

# continously capturing the pictures
for frame in camera.capture_continous(rawCapture, format = "bgr", use_video_port = True):
    # define a frame range
    frame = frame.array

    # set up the color rnage
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV) 
    color_mask = cv2.inRange(hsv, color_lower, color_upper)
    result = cv2.bitwise_and(frame, frame, mask = color_mask)

    print(result)
    rawCapture.truncate(0) # where the ... comes from

    # if no markers are detected, just keep on moving forward
    if np.any(result == 0): 
        print("Still on whiteboard.")

    # if any markers are detected
    else:
        print("Detecting markers!")
        
        # set up a input instruction
        x = input()

        # continously move forward until white board is detected
        while(1):
            # the whiteboard is being detected
            if np.any(result == 0):
                # The device should then move backward 
                GPIO.output(input1, GPIO.LOW)
                GPIO.output(input2, GPIO.HIGH)
                print("Attention: Left wheel is moving backward now!")
                GPIO.output(input3, GPIO.LOW)
                GPIO.output(input4, GPIO.HIGH)
                print("Attention: Right wheel is moving backward now!")
                break # break the loop
    
        while(1):
            if x == "f":
                GPIO.output(input1, GPIO.HIGH)
                GPIO.output(input2, GPIO.LOW)
                print("Attention: Left wheel is moving forward now!")
                GPIO.output(input3, GPIO.LOW)
                GPIO.output(input4, GPIO.HIGH)
                print("Attention: Right wheel is moving forward now!")
                break # break the loop

'''

if x == 'r':
    if(temp1==1):
    GPIO.output(input1,GPIO.HIGH)
    GPIO.output(input2,GPIO.LOW)
    print("forward 4")
    x='z'
    else:
    GPIO.output(input1,GPIO.LOW)
    GPIO.output(input2,GPIO.HIGH)
    print("backward 5")
    x='z'


# type in s to stop
elif x == 's':
    print("stop")
    GPIO.output(input1,GPIO.LOW)
    GPIO.output(input2,GPIO.LOW)
    x='z'


# type in f to move forward
elif x == 'f':
    print("forward 6")
    GPIO.output(input1,GPIO.HIGH)
    GPIO.output(input2,GPIO.LOW)
    temp1=1
    x='z'


# type in b to move backward
elif x == 'b':
    print("backward 7")
    GPIO.output(input1,GPIO.LOW)
    GPIO.output(input2,GPIO.HIGH)
    temp1=0
    x='z'


# type in l to change the moving frequency to low
elif x == 'l':
    print("low")
    p.ChangeDutyCycle(25)
    x='z'


# type in m to change the moving frequency to medium
elif x == 'm':
    print("medium")
    p.ChangeDutyCycle(50)
    x='z'


# type in h to change the moving frequency to high
elif x == 'h':
    print("high")
    p.ChangeDutyCycle(75)
    x='z'


# Manually turn left
#type in r to moves right
elif x == 'left':
    GPIO.output(input1,GPIO.HIGH) # right wheel moves forwards
    GPIO.output(input2,GPIO.LOW)
    print("turning left now")
    GPIO.output(input3,GPIO.LOW) # left wheel moves backwards
    GPIO.output(input4,GPIO.HIGH)
    print("turning right now")


# Manully turn right if needed
elif x == 'right':
    GPIO.output(input3,GPIO.HIGH) # left wheel moves forwards
    GPIO.output(input4,GPIO.LOW)
    print("turning left now")
    GPIO.output(input1,GPIO.LOW) # right wheel moves backwards
    GPIO.output(input2,GPIO.HIGH)
    print("turning right now")

# type in e to end
elif x == 'e':
    GPIO.cleanup()
    break

# if error exists
else:
    print("<<<  Input Error!! >>>")
    print("Please enter the right instructions to continue.....")
    print("Available instructions: r , s, f, b , l, m, h, e")




   # GPIO.cleanup()
'''
